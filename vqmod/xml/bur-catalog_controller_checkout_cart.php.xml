<modification>
	<id>VQMOD - burro: opencart ispconfig integration</id>
	<version>1.5.5.1</version>
	<vqmver>2.3.2</vqmver>
	<author>Federico Carrara</author>


	<!-- ############################################################################################################################# -->
	<!-- #####################################  CHECKOUT CONTROLLER  ################################################################# -->
	<!-- ############################################################################################################################# -->
	<file name="catalog/controller/checkout/cart.php">
		<!-- in the add() method, redirect to product detail when hosting products (with hosting options) are added to cart -->
		<operation error="abort" >
			<search position="replace"><![CDATA[$product_options = $this->model_catalog_product->getProductOptions($this->request->post['product_id']);]]></search>
			<add><![CDATA[
			
			//first check if I'm renewing a hosting: in that case I don't want to redirect to product detail, I want to add directly product to cart
			if ( isset($this->request->post["hosting_renew_order_hosting_id"] ) && (int)$this->request->post["hosting_renew_order_hosting_id"] > 0 ) {
				//do nothing, no redirect will happens

			} elseif ( !isset($this->request->post["is_hosting"] ) ) {
				
				//only redirect addToCart to product detail if I am not already in product detail
				//I am in the product detail if some POST vars are defined
				//so if they aren't, I'm not the product detail page
				
				//see if my product is a hosting product
				$this->load->model('burro/hosting');
				$product_hostings = $this->model_burro_hosting->getProductHostings($this->request->post['product_id']);
				//search if between hostings there are some that require interaction from customer
				//note: right now only 'mailbox' service doesn't require user interaction
				foreach ( $product_hostings as $hosting ) {
					// no more special threatment for mailbox 
					//if ( $hosting['service']!="mailbox" ) {
						//$this->log->write("5!");
						$json['burro"]["error'] = 'must redirect to product detail';
					//}
				}
				//$this->log->write("6");
			} elseif ( isset($this->request->post["is_hosting"] ) && $this->request->post["is_hosting"] == "yes" ) {
			
				//if I'm in the product page, must validate hosting parameters
				//first see if my product is a hosting product
				$this->load->model('burro/hosting');
				$product_hostings = $this->model_burro_hosting->getProductHostings($this->request->post['product_id']);
				foreach ( $product_hostings as $hosting ) {
					//$this->log->write("7 sto ciclando sull hosting: ");
					//$this->log->writeVar( $hosting );
					if ( $hosting['service']=="domain" && ( !isset($this->request->post["hosting_domain"] ) || $this->request->post["hosting_domain"] == "" ) ) {
						//$this->log->write("8!");
						$json['burro"]["error'] = 'domain is required';
					} elseif ( $hosting['service']=="mailbox_space" && ( !isset($this->request->post["hosting_mailbox_selected"] ) || $this->request->post["hosting_mailbox_selected"] == ""  ) ) {
						//$this->log->write("9!");
						$json['burro"]["error'] = 'mailbox is required';
					} elseif ( ( $hosting['service']=="webhosting" || $hosting['service']=="webhosting_space" || $hosting['service']=="webhosting_traffic" ) && ( !isset($this->request->post["hosting_domain_selected"] ) || $this->request->post["hosting_domain_selected"] == "" ) ) {
						//$this->log->write("10!");
						//search if my product has also a domain hosting service in it: if it has, theres no need to validate user input
						if ( !$this->model_burro_hosting->productHostingsContainDomain($product_hostings) ) {
							$json['burro"]["error'] = 'domain is required';
						}
					}
				}
			}
			
			$product_options = $this->model_catalog_product->getProductOptions($this->request->post['product_id']);]]></add>
		</operation>
		
		<!-- when removing an item from cart, also remove related hostings -->
		<operation error="abort" >
			<search position="replace"><![CDATA[unset($this->session->data['vouchers'][$this->request->get['remove']]);]]></search>
			<add><![CDATA[unset($this->session->data['vouchers'][$this->request->get['remove']]);
			
			//remove hosting from sessions
			if ( $this->request->get['remove'] > 0 ) {
				//$this->log->write("rimuovo: ".$this->request->get['remove']);
				$this->load->model('burro/hosting');
				$this->model_burro_hosting->removeHostingFromSessions($this->request->get['remove']);
			}
			
			]]></add>
		</operation>
		
		<!-- index(): if products are hostings, disable quantity -->
		<operation error="abort" >
			<search position="replace"><![CDATA[$option_data = array();]]></search>
			<add><![CDATA[
			
			//check if product has hostings
			$this->load->model('burro/hosting');
			$product_hostings = $this->model_burro_hosting->getProductHostings($product['product_id']);
			if ( count( $product_hostings ) > 0 ) {
				$product['has_hostings'] = true;
			} else {
				$product['has_hostings'] = false;
			}
			
			$option_data = array();]]></add>
		</operation>
		<operation error="abort" >
			<search position="replace"><![CDATA['remove'   => $this->url->link('checkout/cart', 'remove=' . $product['key'])]]></search>
			<add><![CDATA['remove'   => $this->url->link('checkout/cart', 'remove=' . $product['key']),
			'has_hostings'   => $product['has_hostings'] ]]></add>
		</operation>
		
		
	</file>




</modification>	


