<modification>
	<id>VQMOD - burro: opencart ispconfig integration</id>
	<version>1.5.5.1</version>
	<vqmver>2.3.2</vqmver>
	<author>Federico Carrara</author>


	<file name="catalog/controller/product/product.php"> 
		<!-- add loading of hosting data in product controller -->
		<!-- and get monthly price for my product -->
		<operation error="abort" >
			<search position="replace"><![CDATA[if ($this->config->get('config_tax')) {]]></search>
			<add><![CDATA[
			
			//first see if my product is a hosting product
			$this->load->model('burro/hosting');
			$this->data['product_hostings'] = $this->model_burro_hosting->getProductHostings($product_id);
			//search if between hostings, there is a domain service
			$this->data['product_hostings_have_domain'] = $this->model_burro_hosting->productHostingsContainDomain($this->data['product_hostings']);
			//search all domain services and mailboxes and registrants already activated for this user
			if ($this->customer->isLogged()) { 
				$customer_id = $this->customer->getId();
			} else {
				$customer_id = false;
			}
			
			//get monthly price
			$monthlyPrice = $this->model_burro_hosting->getProductMonthlyPrice($product_id);  
			$this->data['monthlyPrice'] = $monthlyPrice["monthlyPrice"]; 
			$this->data['monthlyLabel'] = $monthlyPrice["monthlyLabel"];  
			$this->data['totLabel'] = $monthlyPrice["totLabel"];  

			if ( $customer_id ) {

				//get hostings
				$this->data['avail_domains'] = $this->model_burro_hosting->getHostings(array('active'),array('domain'),0,$customer_id);
				//$this->log->writeVar($this->session->data['hostings']);
				$hostings_in_cart = $this->model_burro_hosting->getHostingsFromSessions();
				foreach ( $hostings_in_cart as $hosting_in_cart ) {
					if ( $hosting_in_cart["hosting_domain"] != "" && $hosting_in_cart["hosting_domain_extension"] != "" && $hosting_in_cart["hosting_domain_selected"] != "" ) {
						//$this->data['avail_domains'][] = array("domain"=>$hosting_in_cart["hosting_domain_selected"]);
						array_unshift( $this->data['avail_domains'], array("domain"=>$hosting_in_cart["hosting_domain_selected"]) );
					}
				}
				//get mailboxes
				$this->data['avail_mailboxes'] = $this->model_burro_hosting->getMailboxes($customer_id);
				
				//get registrants already saved
				$hostings_domain = $this->model_burro_hosting->getHostings(array(),array('domain'),0,$customer_id);  
				//$this->log->writeVar($hostings_domain);
				if ( count( $hostings_domain ) > 0 ) {
					$registrants_company = array(); 
					$registrants_company_hashes = array(); 
					$registrants_person = array();  
					$registrants_person_hashes = array();  
					foreach ( $hostings_domain as $domain ) { 
						$registrant_hash = hash("sha256",$domain['registrant']);  
						$typeAndRegistrant = unserialize($domain['registrant']);  
						$registrant_type = $typeAndRegistrant[0];  
						$registrant_company = $typeAndRegistrant[1];  
						$registrant_person = $typeAndRegistrant[2];  
						if ( $registrant_type == 'company' ) {  
							if ( !in_array($registrant_hash, $registrants_company_hashes) ) {
								array_push($registrants_company, $registrant_company);  
								array_push($registrants_company_hashes, $registrant_hash);  
							}
						} elseif ( $registrant_type == 'person' ) {  
							if ( !in_array($registrant_hash, $registrants_person_hashes) ) {
								array_push($registrants_person, $registrant_person);  
								array_push($registrants_person_hashes, $registrant_hash);  
							}
						} 
					} 
					$this->data['registrants_company'] = $registrants_company; 
					$this->data['registrants_person'] = $registrants_person;
				}
				
			} else {
				$this->data['avail_domains'] = array(  );
				$this->data['avail_mailboxes'] = array(  );
			}
			
			
			if ($this->config->get('config_tax')) {]]></add>
		</operation>

		<!-- get monthly prices for related products -->
		<operation error="abort" >
			<search position="replace"><![CDATA[$this->data['products'][] = array(]]></search>
			<add><![CDATA[
			
				//get monthly price
				$monthlyPrice = $this->model_burro_hosting->getProductMonthlyPrice($result['product_id']);  

			
				$this->data['products'][] = array(
					'monthlyPrice' => $monthlyPrice["monthlyPrice"],
					'monthlyLabel' => $monthlyPrice["monthlyLabel"], 
					'totLabel' => $monthlyPrice["totLabel"], 
					]]></add>
		</operation>
	</file>




</modification>	






	